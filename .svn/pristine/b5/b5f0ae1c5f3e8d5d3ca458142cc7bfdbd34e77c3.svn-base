package com.efun.mainland.util.redis;

import java.util.Set;

import org.apache.commons.pool2.impl.GenericObjectPoolConfig;

import redis.clients.jedis.HostAndPort;

public final class Cluster {

	private static volatile RedisCluster redisCluster;

	private Cluster() {
	}

	protected static void initCluster(Set<HostAndPort> nodes) {
		if (redisCluster == null) {
			synchronized (Cluster.class) {
				if (redisCluster == null) {
					redisCluster = new RedisCluster(nodes);
				}
			}
		}
	}

	protected static void initCluster(Set<HostAndPort> nodes, int timeout) {
		if (redisCluster == null) {
			synchronized (Cluster.class) {
				if (redisCluster == null) {
					redisCluster = new RedisCluster(nodes, timeout);
				}
			}
		}
	}

	protected static void initCluster(Set<HostAndPort> nodes, int timeout, int maxRedirections) {
		if (redisCluster == null) {
			synchronized (Cluster.class) {
				if (redisCluster == null) {
					redisCluster = new RedisCluster(nodes, timeout, maxRedirections);
				}
			}
		}
	}

	protected static void initCluster(Set<HostAndPort> nodes, final GenericObjectPoolConfig poolConfig) {
		if (redisCluster == null) {
			synchronized (Cluster.class) {
				if (redisCluster == null) {
					redisCluster = new RedisCluster(nodes, poolConfig);
				}
			}
		}
	}

	protected static void initCluster(Set<HostAndPort> nodes, int timeout, final GenericObjectPoolConfig poolConfig) {
		if (redisCluster == null) {
			synchronized (Cluster.class) {
				if (redisCluster == null) {
					redisCluster = new RedisCluster(nodes, timeout, poolConfig);
				}
			}
		}
	}

	protected static void initCluster(Set<HostAndPort> redisClusterNode, int timeout, int maxRedirections,
			final GenericObjectPoolConfig poolConfig) {
		if (redisCluster == null) {
			synchronized (Cluster.class) {
				if (redisCluster == null) {
					redisCluster = new RedisCluster(redisClusterNode, timeout, maxRedirections, poolConfig);
				}
			}
		}
	}

	protected static void initCluster(Set<HostAndPort> redisClusterNode, int connectionTimeout, int soTimeout,
			int maxRedirections, final GenericObjectPoolConfig poolConfig) {
		if (redisCluster == null) {
			synchronized (Cluster.class) {
				if (redisCluster == null) {
					redisCluster = new RedisCluster(redisClusterNode, connectionTimeout, soTimeout, maxRedirections,
							poolConfig);
				}
			}
		}
	}

	protected static final class SimpleCluster {
		public static final RedisCluster REDIS_CLUSTER = Cluster.redisCluster;
		public static final boolean IS_CLUSTER = (REDIS_CLUSTER != null);

		static {
			System.out.println("redis cluster ? " + IS_CLUSTER);
		}
	}
}
