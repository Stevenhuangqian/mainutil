package com.efun.mainland.util;

import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * 输出数据
 * 
 * @author Administrator
 *
 */
public class OutputUtil {
	/**
	 * 输出数据
	 * 
	 * @param object
	 * @param request
	 * @param response
	 * @param crossdomain
	 * @param isWeb
	 *            web平台默认拼接jsoncallback
	 * @throws Exception
	 */
	public final static void output(Object object, HttpServletRequest request,
			HttpServletResponse response, String crossdomain, boolean isWeb)
			throws Exception {

		if (crossdomain == null) {
			crossdomain = request.getParameter("crossdomain");
		}

		if (object == null) {
			object = "";
		}

		String value;
		if (isWeb) {
			if ("false".equalsIgnoreCase(crossdomain)) {
				value = object.toString();
			} else {
				value = getCallBack(object,
						request.getParameter("jsoncallback"));
			}
		} else {
			if ("true".equalsIgnoreCase(crossdomain)) {
				value = getCallBack(object,
						request.getParameter("jsoncallback"));
			} else {
				value = object.toString();
			}
		}

		PrintWriter pw = response.getWriter();
		pw.write(value);
		pw.flush();
		pw.close();

	}

	/**
	 * 输出数据(默认有序输出)
	 * 
	 * @param code
	 * @param message
	 * @param request
	 * @param response
	 * @param isWeb
	 *            web平台默认拼接jsoncallback
	 * @throws Exception
	 */
	public final static void output(String code, String message,
			HttpServletRequest request, HttpServletResponse response,
			boolean isWeb) throws Exception {
		output(true, code, message, request, response, isWeb);
	}
	
	/**
	 * 输出数据
	 * 
	 * @param ordered
	 * @param code
	 * @param message
	 * @param request
	 * @param response
	 * @param isWeb
	 *            web平台默认拼接jsoncallback
	 * @throws Exception
	 */
	public final static void output(boolean ordered,String code, String message,
			HttpServletRequest request, HttpServletResponse response,
			boolean isWeb) throws Exception {
		output(MessageBuilder.newInstance(ordered).builderCodeMessage(code, message),
				request, response, null, isWeb);
	}

	/**
	 * 处理要输出的数据
	 * 
	 * @param object
	 * @param jsoncallback
	 * @return
	 */
	private final static String getCallBack(Object object, String jsoncallback) {
		return new StringBuilder(100).append(jsoncallback).append("([")
				.append(object.toString()).append("])").toString();
	}
}
