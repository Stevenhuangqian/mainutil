package com.efun.mainland.util;

import javax.servlet.ServletContext;
import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;

import org.apache.log4j.PropertyConfigurator;
import org.apache.log4j.xml.DOMConfigurator;

import com.efun.mainland.util.PropertiesFileLoader;

public class Log4jConfigListener implements ServletContextListener {
	private static final String LOG4J_LOCATION = "log4jLocation";
	private static final String XML_FILE_EXTENSION = ".xml";
	public static final String SERVER_ID = "server_id";
	public static final String ROOT_PATH = "root_path";

	@Override
	public void contextInitialized(ServletContextEvent event) {
		ServletContext servletContext = event.getServletContext();
		String location = servletContext.getInitParameter(LOG4J_LOCATION);

		if (location != null && location.trim().length() > 0) {
			try {
				String serverId = getServerId();
				String system = System.getProperty("os.name");
				if (system != null && system.toLowerCase().contains("windows")) {
					system = "D:";
				} else {
					system = "";
				}
				System.setProperty(ROOT_PATH, system);
				System.out.println(ROOT_PATH + "=" + system);
				System.setProperty(SERVER_ID, serverId);
				System.out.println(SERVER_ID + "=" + serverId);

				String logFilePath = PropertiesFileLoader.getClassPath()
						+ location;
				System.out.println("log config file:" + logFilePath);

				if (location.toLowerCase().endsWith(XML_FILE_EXTENSION)) {
					DOMConfigurator.configure(logFilePath);
				} else {
					PropertyConfigurator.configure(logFilePath);
				}
			} catch (Exception e) {
				throw new IllegalArgumentException("初始化log4j参数失败: "
						+ e.getMessage());
			}
		}
	}

	@Override
	public void contextDestroyed(ServletContextEvent event) {
	}

	/**
	 * "sun.java.command":"com.caucho.server.resin.Resin --root-directory
	 * /usr/local/resin/ -conf
	 * /usr/local/resin/conf/vhost/analysis.efun.com.conf -socketwait 41798
	 * -server analysis01 restart"
	 */
	private String getServerId() {
		String serverid = "";
		String startCommand = System.getProperty("sun.java.command");
		if (startCommand != null) {
			String[] str = startCommand.split(" ");

			for (int i = 0; i < str.length; i++) {
				if ("-server".equalsIgnoreCase(str[i].trim())) {
					serverid = str[i + 1].trim();
					serverid = "." + serverid;
					break;
				}
			}
		}
		return serverid;
	}

}